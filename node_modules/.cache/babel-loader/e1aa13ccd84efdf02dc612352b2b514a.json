{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/connorchau/Desktop/deco-app/client/src/components/Checkout.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport Footer from \"./Footer\";\nimport { Link, Switch, Route, useHistory } from 'react-router-dom';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { CardElement, Elements, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from '@stripe/stripe-js';\nimport axios from \"axios\";\nconst stripePromise = loadStripe(process.env.REACT_APP_PUBLISHABLE_KEY);\n\nfunction Checkout(props) {\n  _s();\n\n  const history = useHistory();\n  const [emailAddress, setEmailAddress] = useState(\"\");\n  const [isProcessing, setProcessingTo] = useState(false);\n  const [checkoutError, setCheckoutError] = useState();\n  const userID = props.location.state.userID;\n  const province = props.location.state.province;\n  const fullName = props.location.state.fullName;\n  const licensePlate = props.location.state.licensePlate;\n  const vehicleInfo = props.location.state.vehicleInfo;\n  const phoneNumber = props.location.state.phoneNumber;\n  const planType = props.location.state.planType;\n  const basicCount = props.location.state.basicCount;\n  const premiumCount = props.location.state.premiumCount;\n  const serviceRepair = props.location.state.serviceRepair;\n  const repairItems = props.location.state.repairItems;\n  const subtotalBeforeDiscount = props.location.state.subtotalBeforeDiscount;\n  const discount = props.location.state.discount;\n  const taxes = props.location.state.taxes;\n  const total = props.location.state.total;\n  const stripe = useStripe();\n  const elements = useElements();\n\n  function handleEmailInput(event) {\n    setEmailAddress(event.target.value);\n  }\n\n  const handleFormSubmit = async event => {\n    event.preventDefault(); // Get Stripe.js instance\n    // const stripe = await stripePromise;\n    // // Call your backend to create the Checkout Session\n    // const response = await fetch('http://localhost:4000/create-checkout-session', { method: 'POST' });\n    // const session = await response.json();\n    // // When the customer clicks on the button, redirect them to Checkout.\n    // const result = await stripe.redirectToCheckout({\n    //   sessionId: session.id,\n    // });\n    // if (result.error) {\n    //   // If `redirectToCheckout` fails due to a browser or network\n    //   // error, display the localized error message to your customer\n    //   // using `result.error.message`.\n    // }\n\n    setProcessingTo(true);\n    const {\n      data: clientSecret\n    } = await axios.post(\"/api/payment_intents\", {\n      amount: total * 100 //Stripe calculates price in the lowest denomination\n\n    });\n    console.log(clientSecret);\n    const cardElement = elements.getElement(CardElement); //create a payment intent on the server\n    //server returns client_secret of that payment intent\n    //need a reference to the cardElement\n    //need stripe.js\n    //create a payment method\n    //confirm the card payment\n    //payment method id\n    //client_secret\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page-header\",\n      children: \"Checkout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"lookup-label\",\n      children: \"Email Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Email Address\",\n      className: \"lookup-input\",\n      onChange: handleEmailInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User ID: \", userID]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"fullName: \", fullName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"subtotalBeforeDiscount: \", subtotalBeforeDiscount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stripe-form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(CardElement, {\n          options: {\n            style: {\n              base: {\n                fontSize: '16px',\n                color: '#424770',\n                '::placeholder': {\n                  color: '#aab7c4'\n                }\n              },\n              invalid: {\n                color: '#9e2146'\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: isProcessing,\n          children: isProcessing ? \"Processing...\" : `Pay $${price}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lookup-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => history.push(\"/payment\"),\n        children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Checkout, \"Du5xpsKqV7A9am1nGPtck48z4NI=\", false, function () {\n  return [useHistory, useStripe, useElements];\n});\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["/Users/connorchau/Desktop/deco-app/client/src/components/Checkout.jsx"],"names":["React","useState","useEffect","Axios","Footer","Link","Switch","Route","useHistory","ArrowBackIcon","CardElement","Elements","useElements","useStripe","loadStripe","axios","stripePromise","process","env","REACT_APP_PUBLISHABLE_KEY","Checkout","props","history","emailAddress","setEmailAddress","isProcessing","setProcessingTo","checkoutError","setCheckoutError","userID","location","state","province","fullName","licensePlate","vehicleInfo","phoneNumber","planType","basicCount","premiumCount","serviceRepair","repairItems","subtotalBeforeDiscount","discount","taxes","total","stripe","elements","handleEmailInput","event","target","value","handleFormSubmit","preventDefault","data","clientSecret","post","amount","console","log","cardElement","getElement","style","base","fontSize","color","invalid","price","push"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport Axios from \"axios\";\nimport Footer from \"./Footer\";\nimport { Link, Switch, Route, useHistory } from 'react-router-dom';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { CardElement, Elements, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from '@stripe/stripe-js';\nimport axios from \"axios\";\n\nconst stripePromise = loadStripe(process.env.REACT_APP_PUBLISHABLE_KEY);\n\nfunction Checkout(props) {\n    const history = useHistory();\n\n    const [emailAddress, setEmailAddress] = useState(\"\");\n    const [isProcessing, setProcessingTo] = useState(false);\n    const [checkoutError, setCheckoutError] = useState();\n\n    const userID = props.location.state.userID;\n    const province = props.location.state.province;\n    const fullName = props.location.state.fullName;\n    const licensePlate = props.location.state.licensePlate;\n    const vehicleInfo = props.location.state.vehicleInfo;\n    const phoneNumber = props.location.state.phoneNumber;\n    const planType = props.location.state.planType;\n    const basicCount = props.location.state.basicCount;\n    const premiumCount = props.location.state.premiumCount;\n    const serviceRepair = props.location.state.serviceRepair;\n    const repairItems = props.location.state.repairItems;\n    const subtotalBeforeDiscount = props.location.state.subtotalBeforeDiscount;\n    const discount = props.location.state.discount;\n    const taxes = props.location.state.taxes;\n    const total = props.location.state.total;\n\n    const stripe = useStripe();\n    const elements = useElements();\n\n\n    function handleEmailInput(event) {\n        setEmailAddress(event.target.value);\n    }\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n\n        // Get Stripe.js instance\n        // const stripe = await stripePromise;\n\n        // // Call your backend to create the Checkout Session\n        // const response = await fetch('http://localhost:4000/create-checkout-session', { method: 'POST' });\n\n        // const session = await response.json();\n\n        // // When the customer clicks on the button, redirect them to Checkout.\n        // const result = await stripe.redirectToCheckout({\n        //   sessionId: session.id,\n        // });\n\n        // if (result.error) {\n        //   // If `redirectToCheckout` fails due to a browser or network\n        //   // error, display the localized error message to your customer\n        //   // using `result.error.message`.\n        // }\n\n        setProcessingTo(true);\n        const { data: clientSecret } = await axios.post(\"/api/payment_intents\", {\n            amount: total * 100 //Stripe calculates price in the lowest denomination\n        });\n\n        console.log(clientSecret)\n\n        const cardElement = elements.getElement(CardElement);\n        //create a payment intent on the server\n        //server returns client_secret of that payment intent\n\n        //need a reference to the cardElement\n        //need stripe.js\n        //create a payment method\n\n        //confirm the card payment\n        //payment method id\n        //client_secret\n\n\n      };\n\n    return (\n    <div className=\"page-container\">\n        <h1 className=\"page-header\">Checkout</h1>\n        <label className=\"lookup-label\">Email Address</label>\n            <input type=\"text\" placeholder=\"Email Address\" className=\"lookup-input\" onChange={handleEmailInput}/>\n            <p>User ID: {userID}</p>\n            <p>fullName: {fullName}</p>\n            <p>subtotalBeforeDiscount: {subtotalBeforeDiscount}</p>\n        <div className=\"stripe-form\">\n            <form onSubmit={handleFormSubmit}>\n            <CardElement\n                options={{\n                    style: {\n                    base: {\n                        fontSize: '16px',\n                        color: '#424770',\n                        '::placeholder': {\n                        color: '#aab7c4',\n                        },\n                    },\n                    invalid: {\n                        color: '#9e2146',\n                    },\n                    },\n            }}\n            />\n            <button disabled={isProcessing}>\n                {isProcessing ? \"Processing...\" : `Pay $${price}`}\n            </button>\n            </form>\n        </div>\n        <div className=\"lookup-footer\">\n            <button\n                className=\"back-button\"\n                onClick={() => history.push(\"/payment\")}>\n                <ArrowBackIcon></ArrowBackIcon>\n            </button>\n            <Footer />\n        </div>\n    </div>\n    )\n}\n\nexport default Checkout;"]},"metadata":{},"sourceType":"module"}