{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/connorchau/Desktop/deco-app/client/src/components/Checkout.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport Footer from \"./Footer\";\nimport { Link, Switch, Route, useHistory } from 'react-router-dom';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { CardElement, Elements, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from '@stripe/stripe-js';\nimport axios from \"axios\";\nconst stripePromise = loadStripe(process.env.REACT_APP_PUBLISHABLE_KEY);\n\nfunction Checkout(props) {\n  _s();\n\n  const history = useHistory();\n  const [emailAddress, setEmailAddress] = useState(\"\");\n  const [isProcessing, setProcessingTo] = useState(false);\n  const [succeeded, setSucceeded] = useState(false);\n  const [error, setError] = useState(null);\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState('');\n  const userID = props.location.state.userID;\n  const province = props.location.state.province;\n  const fullName = props.location.state.fullName;\n  const licensePlate = props.location.state.licensePlate;\n  const vehicleInfo = props.location.state.vehicleInfo;\n  const phoneNumber = props.location.state.phoneNumber;\n  const planType = props.location.state.planType;\n  const basicCount = props.location.state.basicCount;\n  const premiumCount = props.location.state.premiumCount;\n  const serviceRepair = props.location.state.serviceRepair;\n  const repairItems = props.location.state.repairItems;\n  const subtotalBeforeDiscount = props.location.state.subtotalBeforeDiscount;\n  const discount = props.location.state.discount;\n  const taxes = props.location.state.taxes;\n  const total = props.location.state.total;\n  const stripe = useStripe();\n  const elements = useElements(); // Create PaymentIntent as soon as the page loads\n\n  useEffect(() => {\n    axios.get(\"http://localhost:4000/create-payment-intent\", {\n      params: {\n        total\n      }\n    }).then(res => {\n      return res.json();\n    }).then(data => {\n      setClientSecret(data.clientSecret);\n    });\n  }, []); // useEffect(() => {\n  //     window\n  //       .fetch(\"http://localhost:4000/create-payment-intent\", {\n  //         method: \"POST\",\n  //         headers: {\n  //           \"Content-Type\": \"application/json\"\n  //         },\n  //         body: JSON.stringify({items: [total]})\n  //       })\n  //       .then(res => {\n  //         return res.json();\n  //       })\n  //       .then(data => {\n  //         setClientSecret(data.clientSecret);\n  //       });\n  //   }, []);\n\n  const cardStyle = {\n    style: {\n      base: {\n        color: \"#32325d\",\n        fontFamily: 'Arial, sans-serif',\n        fontSmoothing: \"antialiased\",\n        fontSize: \"16px\",\n        \"::placeholder\": {\n          color: \"#32325d\"\n        }\n      },\n      invalid: {\n        color: \"#fa755a\",\n        iconColor: \"#fa755a\"\n      }\n    }\n  };\n\n  const handleChange = async event => {\n    // Listen for changes in the CardElement\n    // and display any errors as the customer types their card details\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  };\n\n  function handleEmailInput(event) {\n    setEmailAddress(event.target.value);\n  }\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    setProcessingTo(true);\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    });\n\n    if (payload.error) {\n      setError(`Payment failed ${payload.error.message}`);\n      setProcessingTo(false);\n    } else {\n      setError(null);\n      setProcessingTo(false);\n      setSucceeded(true);\n    } // Get Stripe.js instance\n    // const stripe = await stripePromise;\n    // // Call your backend to create the Checkout Session\n    // const response = await fetch('http://localhost:4000/create-checkout-session', { method: 'POST' });\n    // const session = await response.json();\n    // // When the customer clicks on the button, redirect them to Checkout.\n    // const result = await stripe.redirectToCheckout({\n    //   sessionId: session.id,\n    // });\n    // if (result.error) {\n    //   // If `redirectToCheckout` fails due to a browser or network\n    //   // error, display the localized error message to your customer\n    //   // using `result.error.message`.\n    // }\n    // setProcessingTo(true);\n    // const { data: clientSecret } = await axios.post(\"/api/payment_intents\", {\n    //     amount: total * 100 //Stripe calculates price in the lowest denomination\n    // });\n    // console.log(clientSecret)\n    // const cardElement = elements.getElement(CardElement);\n    // const paymentMethodReq = stripe.createPaymentMethod({\n    //     type: \"card\",\n    //     card: cardElement,\n    //     billing_details:\n    // })\n    //create a payment intent on the server\n    //server returns client_secret of that payment intent\n    //need a reference to the cardElement\n    //need stripe.js\n    //create a payment method\n    //confirm the card payment\n    //payment method id\n    //client_secret\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page-header\",\n      children: \"Checkout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"lookup-label\",\n      children: \"Email Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Email Address\",\n      className: \"lookup-input\",\n      onChange: handleEmailInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"User ID: \", userID]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"fullName: \", fullName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"subtotalBeforeDiscount: \", subtotalBeforeDiscount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stripe-form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(CardElement, {\n          id: \"card-element\",\n          className: \"card-input\",\n          options: cardStyle,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"pay-button\",\n          disabled: isProcessing,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"button-text\",\n            children: isProcessing ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner\",\n              id: \"spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 21\n            }, this) : `Pay $${total}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-error\",\n          role: \"alert\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: succeeded ? \"result-message\" : \"result-message hidden\",\n          children: [\"Payment succeeded, see the result in your\", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `https://dashboard.stripe.com/test/payments`,\n            children: [\" \", \"Stripe dashboard.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this), \" Refresh the page to pay again.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lookup-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => history.push(\"/payment\"),\n        children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Checkout, \"XvsGGauo5r96vKWoAl8eoGK3nVM=\", false, function () {\n  return [useHistory, useStripe, useElements];\n});\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["/Users/connorchau/Desktop/deco-app/client/src/components/Checkout.jsx"],"names":["React","useState","useEffect","Axios","Footer","Link","Switch","Route","useHistory","ArrowBackIcon","CardElement","Elements","useElements","useStripe","loadStripe","axios","stripePromise","process","env","REACT_APP_PUBLISHABLE_KEY","Checkout","props","history","emailAddress","setEmailAddress","isProcessing","setProcessingTo","succeeded","setSucceeded","error","setError","disabled","setDisabled","clientSecret","setClientSecret","userID","location","state","province","fullName","licensePlate","vehicleInfo","phoneNumber","planType","basicCount","premiumCount","serviceRepair","repairItems","subtotalBeforeDiscount","discount","taxes","total","stripe","elements","get","params","then","res","json","data","cardStyle","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","handleChange","event","empty","message","handleEmailInput","target","value","handleFormSubmit","preventDefault","payload","confirmCardPayment","payment_method","card","getElement","push"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport Axios from \"axios\";\nimport Footer from \"./Footer\";\nimport { Link, Switch, Route, useHistory } from 'react-router-dom';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { CardElement, Elements, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from '@stripe/stripe-js';\nimport axios from \"axios\";\n\nconst stripePromise = loadStripe(process.env.REACT_APP_PUBLISHABLE_KEY);\n\nfunction Checkout(props) {\n    const history = useHistory();\n\n    const [emailAddress, setEmailAddress] = useState(\"\");\n    const [isProcessing, setProcessingTo] = useState(false);\n    const [succeeded, setSucceeded] = useState(false);\n    const [error, setError] = useState(null);\n    const [disabled, setDisabled] = useState(true);\n    const [clientSecret, setClientSecret] = useState('');\n\n    const userID = props.location.state.userID;\n    const province = props.location.state.province;\n    const fullName = props.location.state.fullName;\n    const licensePlate = props.location.state.licensePlate;\n    const vehicleInfo = props.location.state.vehicleInfo;\n    const phoneNumber = props.location.state.phoneNumber;\n    const planType = props.location.state.planType;\n    const basicCount = props.location.state.basicCount;\n    const premiumCount = props.location.state.premiumCount;\n    const serviceRepair = props.location.state.serviceRepair;\n    const repairItems = props.location.state.repairItems;\n    const subtotalBeforeDiscount = props.location.state.subtotalBeforeDiscount;\n    const discount = props.location.state.discount;\n    const taxes = props.location.state.taxes;\n    const total = props.location.state.total;\n\n    const stripe = useStripe();\n    const elements = useElements();\n\n    // Create PaymentIntent as soon as the page loads\n    useEffect(()=> {\n        axios.get(\"http://localhost:4000/create-payment-intent\", {\n            params: {\n                total\n            }\n            })\n            .then(res => {\n                return res.json();\n            })\n            .then(data => {\n                setClientSecret(data.clientSecret);\n            });\n    }, []);\n\n    // useEffect(() => {\n    //     window\n    //       .fetch(\"http://localhost:4000/create-payment-intent\", {\n    //         method: \"POST\",\n    //         headers: {\n    //           \"Content-Type\": \"application/json\"\n    //         },\n    //         body: JSON.stringify({items: [total]})\n    //       })\n    //       .then(res => {\n    //         return res.json();\n    //       })\n    //       .then(data => {\n    //         setClientSecret(data.clientSecret);\n    //       });\n    //   }, []);\n\n    const cardStyle = {\n        style: {\n          base: {\n            color: \"#32325d\",\n            fontFamily: 'Arial, sans-serif',\n            fontSmoothing: \"antialiased\",\n            fontSize: \"16px\",\n            \"::placeholder\": {\n              color: \"#32325d\"\n            }\n          },\n          invalid: {\n            color: \"#fa755a\",\n            iconColor: \"#fa755a\"\n          }\n        }\n      };\n\n    const handleChange = async (event) => {\n        // Listen for changes in the CardElement\n        // and display any errors as the customer types their card details\n        setDisabled(event.empty);\n        setError(event.error ? event.error.message : \"\");\n      };\n\n    function handleEmailInput(event) {\n        setEmailAddress(event.target.value);\n    }\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        setProcessingTo(true);\n\n        const payload = await stripe.confirmCardPayment(clientSecret, {\n            payment_method: {\n              card: elements.getElement(CardElement)\n            }\n          });\n          if (payload.error) {\n            setError(`Payment failed ${payload.error.message}`);\n            setProcessingTo(false);\n          } else {\n            setError(null);\n            setProcessingTo(false);\n            setSucceeded(true);\n          }\n\n        // Get Stripe.js instance\n        // const stripe = await stripePromise;\n\n        // // Call your backend to create the Checkout Session\n        // const response = await fetch('http://localhost:4000/create-checkout-session', { method: 'POST' });\n\n        // const session = await response.json();\n\n        // // When the customer clicks on the button, redirect them to Checkout.\n        // const result = await stripe.redirectToCheckout({\n        //   sessionId: session.id,\n        // });\n\n        // if (result.error) {\n        //   // If `redirectToCheckout` fails due to a browser or network\n        //   // error, display the localized error message to your customer\n        //   // using `result.error.message`.\n        // }\n\n        // setProcessingTo(true);\n        // const { data: clientSecret } = await axios.post(\"/api/payment_intents\", {\n        //     amount: total * 100 //Stripe calculates price in the lowest denomination\n        // });\n\n        // console.log(clientSecret)\n\n        // const cardElement = elements.getElement(CardElement);\n\n        // const paymentMethodReq = stripe.createPaymentMethod({\n        //     type: \"card\",\n        //     card: cardElement,\n        //     billing_details:\n        // })\n        //create a payment intent on the server\n        //server returns client_secret of that payment intent\n\n        //need a reference to the cardElement\n        //need stripe.js\n        //create a payment method\n\n        //confirm the card payment\n        //payment method id\n        //client_secret\n\n\n      };\n\n    return (\n    <div className=\"page-container\">\n        <h1 className=\"page-header\">Checkout</h1>\n        <label className=\"lookup-label\">Email Address</label>\n            <input type=\"text\" placeholder=\"Email Address\" className=\"lookup-input\" onChange={handleEmailInput}/>\n            <p>User ID: {userID}</p>\n            <p>fullName: {fullName}</p>\n            <p>subtotalBeforeDiscount: {subtotalBeforeDiscount}</p>\n        <div className=\"stripe-form\">\n            <form onSubmit={handleFormSubmit}>\n            <CardElement id=\"card-element\" className=\"card-input\" options={cardStyle} onChange={handleChange} />\n            <button className=\"pay-button\" disabled={isProcessing}>\n                <span id=\"button-text\">\n                {isProcessing ? (\n                    <div className=\"spinner\" id=\"spinner\"></div>\n                ) : (\n                    `Pay $${total}`\n                )}\n                </span>\n            </button>\n            {/* Show any error that happens when processing the payment */}\n            {error && (\n                <div className=\"card-error\" role=\"alert\">\n                {error}\n                </div>\n            )}\n            {/* Show a success message upon completion */}\n            <p className={succeeded ? \"result-message\" : \"result-message hidden\"}>\n                Payment succeeded, see the result in your\n                <a\n                href={`https://dashboard.stripe.com/test/payments`}\n                >\n                {\" \"}\n                Stripe dashboard.\n                </a> Refresh the page to pay again.\n            </p>\n            </form>\n        </div>\n        <div className=\"lookup-footer\">\n            <button\n                className=\"back-button\"\n                onClick={() => history.push(\"/payment\")}>\n                <ArrowBackIcon></ArrowBackIcon>\n            </button>\n            <Footer />\n        </div>\n    </div>\n    )\n}\n\nexport default Checkout;"]},"metadata":{},"sourceType":"module"}