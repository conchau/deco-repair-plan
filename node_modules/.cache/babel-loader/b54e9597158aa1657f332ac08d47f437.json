{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/connorchau/Desktop/deco-app/client/src/components/Checkout.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Axios from \"axios\";\nimport Footer from \"./Footer\";\nimport { Link, Switch, Route, useHistory } from 'react-router-dom';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { CardElement, Elements, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from '@stripe/stripe-js';\nimport axios from \"axios\";\nconst stripePromise = loadStripe(process.env.REACT_APP_PUBLISHABLE_KEY);\n\nfunction Checkout(props) {\n  _s();\n\n  const history = useHistory();\n  const [emailAddress, setEmailAddress] = useState(\"\");\n  const [isProcessing, setProcessingTo] = useState(false);\n  const [succeeded, setSucceeded] = useState(false);\n  const [error, setError] = useState(null);\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState('');\n  const [customerAddError, setCustomerAddError] = useState(\"undefined\");\n  const [invoiceAddError, setInvoiceAddError] = useState(\"undefined\");\n  const userID = props.location.state.userID;\n  const province = props.location.state.province;\n  const fullName = props.location.state.fullName;\n  const licensePlate = props.location.state.licensePlate;\n  const vehicleInfo = props.location.state.vehicleInfo;\n  const phoneNumber = props.location.state.phoneNumber;\n  const planType = props.location.state.planType;\n  const basicCount = props.location.state.basicCount;\n  const premiumCount = props.location.state.premiumCount;\n  const serviceRepair = props.location.state.serviceRepair;\n  const repairItems = props.location.state.repairItems;\n  const subtotalBeforeDiscount = props.location.state.subtotalBeforeDiscount;\n  const discount = props.location.state.discount;\n  const taxes = props.location.state.taxes;\n  const total = props.location.state.total;\n  const customerName1 = props.location.state.customerNameInput1;\n  const licensePlate1 = props.location.state.licensePlateInput1;\n  const vehicleInfo1 = props.location.state.vehicleInfoInput1;\n  const additionalPlanType1 = props.location.state.additionalPlanType1;\n  const customerName2 = props.location.state.customerNameInput2;\n  const licensePlate2 = props.location.state.licensePlateInput2;\n  const vehicleInfo2 = props.location.state.vehicleInfoInput2;\n  const additionalPlanType2 = props.location.state.additionalPlanType2;\n  const customerName3 = props.location.state.customerNameInput3;\n  const licensePlate3 = props.location.state.licensePlateInput3;\n  const vehicleInfo3 = props.location.state.vehicleInfoInput3;\n  const additionalPlanType3 = props.location.state.additionalPlanType3;\n  const customerName4 = props.location.state.customerNameInput4;\n  const licensePlate4 = props.location.state.licensePlateInput4;\n  const vehicleInfo4 = props.location.state.vehicleInfoInput4;\n  const additionalPlanType4 = props.location.state.additionalPlanType4;\n  const stripe = useStripe();\n  const elements = useElements(); // Create PaymentIntent as soon as the page loads\n\n  useEffect(() => {\n    window.fetch(\"http://localhost:4000/create-payment-intent\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        items: Math.floor(total * 100)\n      })\n    }).then(res => {\n      return res.json();\n    }).then(data => {\n      setClientSecret(data.clientSecret);\n    });\n  }, []);\n  const cardStyle = {\n    hidePostalCode: true,\n    style: {\n      base: {\n        color: \"#32325d\",\n        fontFamily: 'Arial, sans-serif',\n        fontSmoothing: \"antialiased\",\n        fontSize: \"16px\",\n        \"::placeholder\": {\n          color: \"#32325d\"\n        }\n      },\n      invalid: {\n        color: \"#fa755a\",\n        iconColor: \"#fa755a\"\n      }\n    }\n  };\n\n  const handleChange = async event => {\n    // Listen for changes in the CardElement\n    // and display any errors as the customer types their card details\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  };\n\n  function handleEmailInput(event) {\n    setEmailAddress(event.target.value);\n  }\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    setProcessingTo(true);\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    });\n\n    if (payload.error) {\n      setError(`Payment failed ${payload.error.message}`);\n      setProcessingTo(false);\n    } else {\n      setError(null);\n      setProcessingTo(false);\n      setSucceeded(true); //Add main customer to database\n\n      Axios.post(\"http://localhost:4000/customer/insert\", {\n        province: province,\n        fullName: fullName,\n        licensePlate: licensePlate,\n        vehicleInfo: vehicleInfo,\n        planType: planType,\n        phoneNumber: phoneNumber,\n        email: emailAddress\n      }).then(response => {\n        console.log(response.data.errno);\n        setCustomerAddError(response.data.errno);\n      }); //If necessary, add additional customers to database\n\n      if (customerName1 !== null) {\n        Axios.post(\"http://localhost:4000/customer/insert\", {\n          province: province,\n          fullName: customerName1,\n          licensePlate: licensePlate1,\n          vehicleInfo: vehicleInfo1,\n          planType: additionalPlanType1,\n          phoneNumber: phoneNumber,\n          email: emailAddress\n        });\n      }\n\n      if (customerName2 !== null) {\n        Axios.post(\"http://localhost:4000/customer/insert\", {\n          province: province,\n          fullName: customerName2,\n          licensePlate: licensePlate2,\n          vehicleInfo: vehicleInfo2,\n          planType: additionalPlanType2,\n          phoneNumber: phoneNumber,\n          email: emailAddress\n        });\n      }\n\n      if (customerName3 !== null) {\n        Axios.post(\"http://localhost:4000/customer/insert\", {\n          province: province,\n          fullName: customerName3,\n          licensePlate: licensePlate3,\n          vehicleInfo: vehicleInfo3,\n          planType: additionalPlanType3,\n          phoneNumber: phoneNumber,\n          email: emailAddress\n        });\n      }\n\n      if (customerName4 !== null) {\n        Axios.post(\"http://localhost:4000/customer/insert\", {\n          province: province,\n          fullName: customerName4,\n          licensePlate: licensePlate4,\n          vehicleInfo: vehicleInfo4,\n          planType: additionalPlanType4,\n          phoneNumber: phoneNumber,\n          email: emailAddress\n        });\n      } // //Add invoice to database\n\n\n      Axios.post(\"http://localhost:4000/invoice/insert\", {\n        userID: userID,\n        province: province,\n        planType: planType,\n        basicCount: basicCount,\n        premiumCount: premiumCount,\n        serviceRepair: serviceRepair,\n        repairItems: repairItems,\n        subtotalBeforeDiscount: subtotalBeforeDiscount,\n        discount: discount,\n        taxes: taxes,\n        total: total,\n        fullName: fullName,\n        licensePlate: licensePlate,\n        vehicleInfo: vehicleInfo,\n        phoneNumber: phoneNumber,\n        email: emailAddress\n      }).then(response => {\n        console.log(response.data.errno);\n        setInvoiceAddError(response.data.errno);\n      });\n      history.push(\"/checkoutconfirmed\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"page-header\",\n      children: \"Checkout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"lookup-label\",\n      children: \"Email Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Email Address\",\n      className: \"checkout-input\",\n      onChange: handleEmailInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stripe-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(CardElement, {\n          id: \"card-element\",\n          className: \"card-input\",\n          options: cardStyle,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"pay-button\",\n          disabled: isProcessing,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"button-text\",\n            children: isProcessing ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner\",\n              id: \"spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 21\n            }, this) : `Pay $${total}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-error\",\n          role: \"alert\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: succeeded ? \"result-message\" : \"result-message hidden\",\n          children: [\"Payment succeeded, see the result in your\", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `https://dashboard.stripe.com/test/payments`,\n            children: [\" \", \"Stripe dashboard.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 17\n          }, this), \" Refresh the page to pay again.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"customerName1: \", customerName1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lookup-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => history.push(\"/payment\"),\n        children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Checkout, \"IMuHniT1gFtNfx+Nt79XUX8/HgQ=\", false, function () {\n  return [useHistory, useStripe, useElements];\n});\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["/Users/connorchau/Desktop/deco-app/client/src/components/Checkout.jsx"],"names":["React","useState","useEffect","Axios","Footer","Link","Switch","Route","useHistory","ArrowBackIcon","CardElement","Elements","useElements","useStripe","loadStripe","axios","stripePromise","process","env","REACT_APP_PUBLISHABLE_KEY","Checkout","props","history","emailAddress","setEmailAddress","isProcessing","setProcessingTo","succeeded","setSucceeded","error","setError","disabled","setDisabled","clientSecret","setClientSecret","customerAddError","setCustomerAddError","invoiceAddError","setInvoiceAddError","userID","location","state","province","fullName","licensePlate","vehicleInfo","phoneNumber","planType","basicCount","premiumCount","serviceRepair","repairItems","subtotalBeforeDiscount","discount","taxes","total","customerName1","customerNameInput1","licensePlate1","licensePlateInput1","vehicleInfo1","vehicleInfoInput1","additionalPlanType1","customerName2","customerNameInput2","licensePlate2","licensePlateInput2","vehicleInfo2","vehicleInfoInput2","additionalPlanType2","customerName3","customerNameInput3","licensePlate3","licensePlateInput3","vehicleInfo3","vehicleInfoInput3","additionalPlanType3","customerName4","customerNameInput4","licensePlate4","licensePlateInput4","vehicleInfo4","vehicleInfoInput4","additionalPlanType4","stripe","elements","window","fetch","method","headers","body","JSON","stringify","items","Math","floor","then","res","json","data","cardStyle","hidePostalCode","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","handleChange","event","empty","message","handleEmailInput","target","value","handleFormSubmit","preventDefault","payload","confirmCardPayment","payment_method","card","getElement","post","email","response","console","log","errno","push"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport Axios from \"axios\";\nimport Footer from \"./Footer\";\nimport { Link, Switch, Route, useHistory } from 'react-router-dom';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { CardElement, Elements, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from '@stripe/stripe-js';\nimport axios from \"axios\";\n\nconst stripePromise = loadStripe(process.env.REACT_APP_PUBLISHABLE_KEY);\n\nfunction Checkout(props) {\n    const history = useHistory();\n\n    const [emailAddress, setEmailAddress] = useState(\"\");\n    const [isProcessing, setProcessingTo] = useState(false);\n    const [succeeded, setSucceeded] = useState(false);\n    const [error, setError] = useState(null);\n    const [disabled, setDisabled] = useState(true);\n    const [clientSecret, setClientSecret] = useState('');\n    const [customerAddError, setCustomerAddError] = useState(\"undefined\");\n    const [invoiceAddError, setInvoiceAddError] = useState(\"undefined\");\n\n    const userID = props.location.state.userID;\n    const province = props.location.state.province;\n    const fullName = props.location.state.fullName;\n    const licensePlate = props.location.state.licensePlate;\n    const vehicleInfo = props.location.state.vehicleInfo;\n    const phoneNumber = props.location.state.phoneNumber;\n    const planType = props.location.state.planType;\n    const basicCount = props.location.state.basicCount;\n    const premiumCount = props.location.state.premiumCount;\n    const serviceRepair = props.location.state.serviceRepair;\n    const repairItems = props.location.state.repairItems;\n    const subtotalBeforeDiscount = props.location.state.subtotalBeforeDiscount;\n    const discount = props.location.state.discount;\n    const taxes = props.location.state.taxes;\n    const total = props.location.state.total;\n    const customerName1 = props.location.state.customerNameInput1;\n    const licensePlate1 = props.location.state.licensePlateInput1;\n    const vehicleInfo1 = props.location.state.vehicleInfoInput1;\n    const additionalPlanType1 = props.location.state.additionalPlanType1;\n    const customerName2 = props.location.state.customerNameInput2;\n    const licensePlate2 = props.location.state.licensePlateInput2;\n    const vehicleInfo2 = props.location.state.vehicleInfoInput2;\n    const additionalPlanType2 = props.location.state.additionalPlanType2;\n    const customerName3 = props.location.state.customerNameInput3;\n    const licensePlate3 = props.location.state.licensePlateInput3;\n    const vehicleInfo3 = props.location.state.vehicleInfoInput3;\n    const additionalPlanType3 = props.location.state.additionalPlanType3;\n    const customerName4 = props.location.state.customerNameInput4;\n    const licensePlate4 = props.location.state.licensePlateInput4;\n    const vehicleInfo4 = props.location.state.vehicleInfoInput4;\n    const additionalPlanType4 = props.location.state.additionalPlanType4;\n\n    const stripe = useStripe();\n    const elements = useElements();\n\n    // Create PaymentIntent as soon as the page loads\n    useEffect(() => {\n        window\n          .fetch(\"http://localhost:4000/create-payment-intent\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({items: Math.floor(total * 100)})\n          })\n          .then(res => {\n            return res.json();\n          })\n          .then(data => {\n            setClientSecret(data.clientSecret);\n          });\n      }, []);\n\n    const cardStyle = {\n      hidePostalCode: true,\n      style: {\n          base: {\n            color: \"#32325d\",\n            fontFamily: 'Arial, sans-serif',\n            fontSmoothing: \"antialiased\",\n            fontSize: \"16px\",\n            \"::placeholder\": {\n              color: \"#32325d\"\n            }\n          },\n          invalid: {\n            color: \"#fa755a\",\n            iconColor: \"#fa755a\"\n          }\n        }\n      };\n\n    const handleChange = async (event) => {\n        // Listen for changes in the CardElement\n        // and display any errors as the customer types their card details\n        setDisabled(event.empty);\n        setError(event.error ? event.error.message : \"\");\n      };\n\n    function handleEmailInput(event) {\n        setEmailAddress(event.target.value);\n    }\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        setProcessingTo(true);\n\n        const payload = await stripe.confirmCardPayment(clientSecret, {\n            payment_method: {\n              card: elements.getElement(CardElement)\n            }\n          });\n          if (payload.error) {\n            setError(`Payment failed ${payload.error.message}`);\n            setProcessingTo(false);\n          } else {\n            setError(null);\n            setProcessingTo(false);\n            setSucceeded(true);\n\n            //Add main customer to database\n            Axios.post(\"http://localhost:4000/customer/insert\", {\n                province: province,\n                fullName: fullName,\n                licensePlate: licensePlate,\n                vehicleInfo: vehicleInfo,\n                planType: planType,\n                phoneNumber: phoneNumber,\n                email: emailAddress\n            }).then((response) => {\n                console.log(response.data.errno);\n                setCustomerAddError(response.data.errno);\n            });\n\n            //If necessary, add additional customers to database\n            if (customerName1 !== null){\n              Axios.post(\"http://localhost:4000/customer/insert\", {\n                province: province,\n                fullName: customerName1,\n                licensePlate: licensePlate1,\n                vehicleInfo: vehicleInfo1,\n                planType: additionalPlanType1,\n                phoneNumber: phoneNumber,\n                email: emailAddress\n              });\n            }\n\n            if (customerName2 !== null){\n              Axios.post(\"http://localhost:4000/customer/insert\", {\n                province: province,\n                fullName: customerName2,\n                licensePlate: licensePlate2,\n                vehicleInfo: vehicleInfo2,\n                planType: additionalPlanType2,\n                phoneNumber: phoneNumber,\n                email: emailAddress\n              });\n            }\n\n            if (customerName3 !== null){\n              Axios.post(\"http://localhost:4000/customer/insert\", {\n                province: province,\n                fullName: customerName3,\n                licensePlate: licensePlate3,\n                vehicleInfo: vehicleInfo3,\n                planType: additionalPlanType3,\n                phoneNumber: phoneNumber,\n                email: emailAddress\n              });\n            }\n\n            if (customerName4 !== null){\n              Axios.post(\"http://localhost:4000/customer/insert\", {\n                province: province,\n                fullName: customerName4,\n                licensePlate: licensePlate4,\n                vehicleInfo: vehicleInfo4,\n                planType: additionalPlanType4,\n                phoneNumber: phoneNumber,\n                email: emailAddress\n              });\n            }\n\n            // //Add invoice to database\n            Axios.post(\"http://localhost:4000/invoice/insert\", {\n                userID: userID,\n                province: province,\n                planType: planType,\n                basicCount: basicCount,\n                premiumCount: premiumCount,\n                serviceRepair: serviceRepair,\n                repairItems: repairItems,\n                subtotalBeforeDiscount: subtotalBeforeDiscount,\n                discount: discount,\n                taxes: taxes,\n                total: total,\n                fullName: fullName,\n                licensePlate: licensePlate,\n                vehicleInfo: vehicleInfo,\n                phoneNumber: phoneNumber,\n                email: emailAddress\n            }).then((response) => {\n                console.log(response.data.errno);\n                setInvoiceAddError(response.data.errno);\n            });\n\n            (history.push(\"/checkoutconfirmed\"));\n          }\n      };\n\n    return (\n    <div className=\"page-container\">\n        <h1 className=\"page-header\">Checkout</h1>\n        <label className=\"lookup-label\">Email Address</label>\n            <input type=\"text\" placeholder=\"Email Address\" className=\"checkout-input\" onChange={handleEmailInput}/>\n        <div className=\"stripe-form\">\n            <form onSubmit={handleFormSubmit}>\n            <CardElement id=\"card-element\" className=\"card-input\" options={cardStyle} onChange={handleChange} />\n            <button className=\"pay-button\" disabled={isProcessing}>\n                <span id=\"button-text\">\n                {isProcessing ? (\n                    <div className=\"spinner\" id=\"spinner\"></div>\n                ) : (\n                    `Pay $${total}`\n                )}\n                </span>\n            </button>\n            {/* Show any error that happens when processing the payment */}\n            {error && (\n                <div className=\"card-error\" role=\"alert\">\n                {error}\n                </div>\n            )}\n            {/* Show a success message upon completion */}\n            <p className={succeeded ? \"result-message\" : \"result-message hidden\"}>\n                Payment succeeded, see the result in your\n                <a\n                href={`https://dashboard.stripe.com/test/payments`}\n                >\n                {\" \"}\n                Stripe dashboard.\n                </a> Refresh the page to pay again.\n            </p>\n            </form>\n            <p>customerName1: {customerName1}</p>\n            {/* <p>Customer Add Error: {customerAddError}</p>\n            <p>Invoice Add Error: {invoiceAddError}</p>\n            {customerAddError === undefined && invoiceAddError === undefined && (\n                <p>NO ERROR!</p>\n            )} */}\n        </div>\n        <div className=\"lookup-footer\">\n            <button\n                className=\"back-button\"\n                onClick={() => history.push(\"/payment\")}>\n                <ArrowBackIcon></ArrowBackIcon>\n            </button>\n            <Footer />\n        </div>\n    </div>\n    )\n}\n\nexport default Checkout;"]},"metadata":{},"sourceType":"module"}